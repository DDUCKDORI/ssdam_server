<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//iybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dduckdori.ssdam_server.Mapper.QuestionMapper">

    <select id="find_question" resultType="com.dduckdori.ssdam_server.Question.QuestionDTO" parameterType="com.dduckdori.ssdam_server.Question.QuestionDTO">
        SELECT A.MEM_ID,A.INVITE_CD, B.QUST_ID,B.CATE_ID,D.QUST_CN, C.ANS_CN,C.ANS_DTM,
               CASE
                   WHEN C.ANS_CN IS NULL THEN 'FALSE'
                   ELSE 'TRUE'
                   END AS RPY_YN,
               E.NON_ANS_NUM
        FROM SD_MEMBER AS A
                 LEFT JOIN SD_SEND_DETLSD AS B ON A.INVITE_CD=B.INVITE_CD
                 LEFT JOIN SD_ANSWER AS C ON B.QUST_ID=C.QUST_ID AND B.CATE_ID=C.CATE_ID AND B. INVITE_CD=C.INVITE_CD AND A.MEM_ID=C.MEM_ID
                 LEFT JOIN SD_QUESTION AS D ON B.QUST_ID=D.QUST_ID AND B.CATE_ID=D.CATE_ID
                 LEFT JOIN (SELECT A.INVITE_CD, COUNT(*) AS NON_ANS_NUM
                            FROM SD_MEMBER AS A
                                     LEFT JOIN SD_SEND_DETLSD AS B ON A.INVITE_CD=B.INVITE_CD
                                     LEFT JOIN SD_ANSWER AS C ON B.QUST_ID=C.QUST_ID AND B.CATE_ID=C.CATE_ID AND B. INVITE_CD=C.INVITE_CD AND A.MEM_ID=C.MEM_ID
                                     LEFT JOIN SD_QUESTION AS D ON B.QUST_ID=D.QUST_ID AND B.CATE_ID=D.CATE_ID
                            WHERE C.ANS_CN IS NULL
                            GROUP BY A.INVITE_CD) AS E
                           ON E.INVITE_CD=A.INVITE_CD
        WHERE A.MEM_ID=#{Mem_id}
          AND A.INVITE_CD=#{Invite_cd}
        ORDER BY B.FST_INPUT_DTM DESC
    </select>


</mapper>